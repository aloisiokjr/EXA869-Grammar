"Name"     = 'Enter the name of the grammar'
"Author"   = 'Enter your name'
"Version"  = 'The version of the grammar and/or language'
"About"    = 'A short description of the grammar'

"Start Symbol" = <Expressions>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{String Chars} = {Printable} + {HT} - ["]

! -------------------------------------------------
! Terminals
! -------------------------------------------------

Identifier = {Letter}({AlphaNumeric} | [_])*

Number = {Digit}+('.'{Digit}+)?
       
CadeCaracters = '"' ({String Chars})* '"'
              
Type  = ('int' | 'real' | 'boolean' | 'string')
      
Unary_Operators = ( '++' | '--' )
                
Logical_Operators = ( '&&' | '||' )
     
RelationalOperator = ( '==' | '>' | '<' | '>=' | '<=' | '!=')
                   
Plus_Minus = ( '+' | '-' )
           
Times_division = ( '*' | '/' )

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The grammar starts below
<Expressions> ::= <LogicalExp>
                | <AritmeticExp>

<LogicalExp> ::= <RelationalExp> Logical_Operators <LogicalExp>
                | '(' <LogicalExp> ')'
                | <RelationalExp>

<RelationalExp> ::= <AritmeticExp> RelationalOperator <AritmeticExp>
                  | '(' <RelationalExp> ')'

<AritmeticExp>  ::= <Operacao> <OpSoma>
                 
<Operacao> ::= <OpUnario> <OpMultiplicacao>

<OpSoma> ::= Plus_Minus <Operacao> <OpSoma>
           | <>
           
<OpMultiplicacao> ::= Times_division <OpUnario> <OpMultiplicacao>
                    | <>
                    
<OpUnario> ::= Unary_Operators <Valor>
              | '!' <Call Variable>
              | <Valor>

<Valor> ::= '(' <AritmeticExp> ')'
          | Number 
          | <Call Variable>

<Call Variable> ::= 'global.' Identifier
                   |'local.'  Identifier
                   | Identifier
